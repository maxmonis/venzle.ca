@import "../style/puzzle.css";

.creator-text {
  color: var(--gray);
  font-size: 0.875rem;
}

.game-controls {
  align-items: center;
  display: flex;
  flex-direction: column;
}

.game-controls > p {
  font-size: 0.875rem;
  margin-block: 0.25rem;
  text-align: center;
}

.draggables {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 0.25rem;
  max-width: 27rem;
}

[draggable="true"] {
  background-color: white;
  border-color: var(--dark);
  border-style: solid;
  cursor: grab;
  font-size: 0.875rem;
}
.dropzone.dragover {
  background-color: rgba(255, 255, 255, 0.7);
}

.reset-button {
  color: var(--red);
  margin-block-start: 0.5rem;
}

.guesses-text {
  margin-block: 0.5rem;
  text-align: center;
}

.hints-container {
  align-items: center;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-block-start: 1.25rem;
  max-width: 65ch;
  text-align: center;
}

.previous-game-container {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  margin-block-start: 5rem;
  max-width: 30rem;
}

.previous-game-container p {
  color: var(--gray);
  font-size: 0.875rem;
}

.game-summary {
  margin-block-start: 3rem;
}

.game-summary > div {
  margin: 0.5rem auto 0;
  width: fit-content;
}

.home-button {
  margin: -1rem auto 0.5rem -0.25rem;
}

dialog {
  border-radius: 1rem;
  border-style: solid;
  margin: 20vh auto;
  padding: 0;
  text-align: left;
  width: min(calc(100vw - 2.5rem), 30rem);
}

dialog::backdrop {
  background-color: rgba(0, 0, 0, 0.8);
}

dialog,
dialog > div {
  border-radius: 1rem;
}

dialog > div {
  padding: 1.25rem;
}

dialog h1 {
  font-size: 1.125rem;
  margin-block-end: 0.5rem;
}

.dialog-cta-container {
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem 1.25rem;
  justify-content: flex-end;
  margin-block-start: 0.5rem;
}

.dialog-cta-container > a {
  padding: 0.75rem;
}

.red-text {
  color: var(--red);
}

main :not(:where(.circle-container *, .previous-game-container *)) {
  animation: fadeIn 300ms forwards;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  25% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@media (prefers-reduced-motion: reduce) {
  main :not(:where(.circle-container *, .previous-game-container *)) {
    animation: none;
  }
}
